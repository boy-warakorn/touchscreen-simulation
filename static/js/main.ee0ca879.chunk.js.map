{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","gridElement","setGridElement","excludeCircleList","setExcludeCircleList","visibleCircleList","setVisibleCircleList","isGridOn","setIsGridOn","rightMostIndex","setRightMostIndex","leftMostIndex","useEffect","tempGrid","tempExclude","count","push","excludeCircle","map","value","getCircleClassName","index","currentCircle","filter","ele","length","size","className","_","includes","id","onPointerEnter","isLeftMost","isRightMost","farTopCenterIndex","farTopLine","nearTopCenterIndex","nearTopLine","currentCenterLine","nearBottomIndex","nearBottomLine","farBottomIndex","farBottomLine","circleIndexList","onHover","onPointerLeave","FormControlLabel","control","Switch","onChange","event","target","checked","label","style","margin","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee0ca879.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Switch from \"@mui/material/Switch\";\n\nfunction App() {\n  const [gridElement, setGridElement] = useState<Number[]>([]);\n  const [excludeCircleList, setExcludeCircleList] = useState<Number[]>([]);\n  const [visibleCircleList, setVisibleCircleList] = useState<\n    { size: string; index: number }[]\n  >([]);\n  const [isGridOn, setIsGridOn] = useState<Boolean>(false);\n  const [rightMostIndex, setRightMostIndex] = useState<Number[]>([]);\n  const gridSize = 576;\n  const leftMostIndex = [\n    0, 24, 48, 72, 96, 120, 144, 168, 192, 216, 240, 264, 288, 312, 336, 360,\n    384, 408, 432, 456, 480, 504, 528,\n  ];\n\n  useEffect(() => {\n    let tempGrid = [];\n    let tempExclude = [];\n    for (var count = 0; count < gridSize; count++) {\n      tempGrid.push(1);\n      if (count % 24 === 0) {\n        var excludeCircle = count + 23;\n        tempExclude.push(excludeCircle);\n      }\n      if (count >= 552) {\n        tempExclude.push(count);\n      }\n    }\n\n    setRightMostIndex(leftMostIndex.map((value) => value + 22));\n    setExcludeCircleList(tempExclude);\n    setGridElement(tempGrid);\n\n    // eslint-disable-next-line\n  }, []);\n\n  const onHover = (index: number) => {\n    const isLeftMost = leftMostIndex.includes(index);\n    const isRightMost = rightMostIndex.includes(index);\n\n    // Far Top Line\n    const farTopCenterIndex = index - 48;\n    let farTopLine: any = [\n      farTopCenterIndex - 1,\n      farTopCenterIndex,\n      farTopCenterIndex + 1,\n    ];\n\n    // 48 => 22,46,70\n    farTopLine = farTopLine.map((value: number) => ({\n      size: \"small\",\n      index: value,\n    }));\n\n    // Near Top Line\n    const nearTopCenterIndex = index - 24;\n    const nearTopLine = [\n      !isLeftMost && { index: nearTopCenterIndex - 2, size: \"small\" },\n      { index: nearTopCenterIndex - 1, size: \"medium\" },\n      { index: nearTopCenterIndex, size: \"medium\" },\n      { index: nearTopCenterIndex + 1, size: \"medium\" },\n      !isRightMost && { index: nearTopCenterIndex + 2, size: \"small\" },\n    ];\n    // Current Line\n    const currentCenterIndex = index;\n    const currentCenterLine = [\n      !isLeftMost && { index: currentCenterIndex - 2, size: \"small\" },\n      { index: currentCenterIndex - 1, size: \"medium\" },\n      { index: currentCenterIndex, size: \"large\" },\n      { index: currentCenterIndex + 1, size: \"medium\" },\n      !isRightMost && { index: currentCenterIndex + 2, size: \"small\" },\n    ];\n    // Near Bottom Line\n    const nearBottomIndex = index + 24;\n    const nearBottomLine = [\n      !isLeftMost && { index: nearBottomIndex - 2, size: \"small\" },\n      { index: nearBottomIndex - 1, size: \"medium\" },\n      { index: nearBottomIndex, size: \"medium\" },\n      { index: nearBottomIndex + 1, size: \"medium\" },\n      !isRightMost && { index: nearBottomIndex + 2, size: \"small\" },\n    ];\n    // Far Bottom Line\n    const farBottomIndex = index + 48;\n    let farBottomLine: any = [\n      farBottomIndex - 1,\n      farBottomIndex,\n      farBottomIndex + 1,\n    ];\n    farBottomLine = farBottomLine.map((value: number) => ({\n      size: \"small\",\n      index: value,\n    }));\n\n    const tempCircleIndexList = [\n      ...farTopLine,\n      ...nearTopLine,\n      ...currentCenterLine,\n      ...nearBottomLine,\n      ...farBottomLine,\n    ];\n\n    const circleIndexList = tempCircleIndexList.filter(\n      (value) => value.index >= 0\n    );\n\n    setVisibleCircleList(circleIndexList);\n  };\n\n  const getCircleClassName = (index: number) => {\n    const currentCircle = visibleCircleList.filter(\n      (ele) => index === ele.index\n    );\n    const isInclude = currentCircle.length > 0;\n\n    if (isInclude) {\n      switch (currentCircle[0].size) {\n        case \"small\": {\n          return \"circle small-circle\";\n        }\n        case \"medium\": {\n          return \"circle medium-circle\";\n        }\n        case \"large\": {\n          return \"circle big-circle\";\n        }\n\n        default:\n          break;\n      }\n    }\n    return \"circle\";\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"phone-container\">\n        <div className=\"phone\">\n          <div className=\"phone-header\">\n            <div className=\"camera\"></div>\n          </div>\n          <div className=\"phone-content\">\n            <div className=\"simulation-grid\">\n              {gridElement.map((_, index) => (\n                <div\n                  className={`${!isGridOn ? \"no-grid\" : \"\"} grid-element ${\n                    index > 23 ? \"grid-element-bottom\" : \"\"\n                  } ${index % 24 !== 0 ? \"grid-element-right\" : \"\"}`}\n                >\n                  {excludeCircleList.includes(index) ? (\n                    <></>\n                  ) : (\n                    <div\n                      id={`circle${index}`}\n                      className={getCircleClassName(index)}\n                      onPointerEnter={() => onHover(index)}\n                      onPointerLeave={() => setVisibleCircleList([])}\n                    ></div>\n                  )}\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className=\"phone-bottom\">\n            <div className=\"home-button\"></div>\n          </div>\n        </div>\n      </div>\n      <div className=\"content-container\">\n        <div className=\"content\">\n          <div className=\"heading-1\">Apple Touch Screen simulation</div>\n          <hr className=\"line\" />\n          <div className=\"heading-2\">Toolbar</div>\n          <div className=\"tool-bar\">\n            <FormControlLabel\n              control={\n                <Switch\n                  value={isGridOn}\n                  onChange={(event) => setIsGridOn(event.target.checked)}\n                />\n              }\n              label=\"Show Simulation Grid\"\n            />\n          </div>\n          <hr className=\"line\" />\n          <div className=\"heading-2\">Touchscreen simulation</div>\n          <div className=\"body-1\">\n            You can see the cursor mouse as human finger which acts as a touch\n            detection in changes of electronic charge particles. And the surface\n            of them as the capacitive touchscreen grid which is the screen's\n            electrostatic field. So, we are simulating how Apple's touchscreen\n            works.\n          </div>\n          <hr className=\"line\" />\n          <div className=\"heading-2\">What is Capacitive Touch Screen?</div>\n          <div className=\"body-1\">\n            A capacitive touch screen is a control display that uses the\n            conductive touch of a human finger or a specialized device for\n            input. It consists of an insulator, such as glass, coated with a\n            transparent conductor. When a capacitive panel is touched, a small\n            amount of charge is drawn to the point of contact, which becomes a\n            functional capacitor. The change in the electrostatic field is\n            measured to find the location. In some designs, circuits located at\n            each corner of the panel measure the charge and send the information\n            to the controller for processing. In multi-touch screens, sensors\n            are arranged in a grid to enable more complex input.\n          </div>\n          <hr className=\"line\" />\n          <div className=\"heading-2\">How Apple Touch Screen work?</div>\n          <div className=\"body-1\">\n            The iPhone uses a more elaborate form of capacitive touch screen. A\n            grid of electrodes divides its display into an array of hundreds of\n            small, separate touch elements. Each of these can be triggered\n            independently, enabling the iPhone to sense more than one finger at\n            once, and making possible “multi-touch” features, such as pinching\n            an image to shrink it. And the glass used for the iPhone screen acts\n            as an insulator and is coated with a transparent conductor. Touching\n            the surface of the coated glass results in a distortion of the\n            body's electrostatic field, measurable as a change in capacitance.\n            Using glass and capacitive technology makes the iPhone's touchscreen\n            very precise compared with resistive screens but also with other\n            types of capacitive screens. The glass panel is also very easy to\n            clean and the functionality is not affected by dirt, grease or\n            moisture.\n          </div>\n          <hr className=\"line\" />\n          <div className=\"heading-2\">\n            Apple Touch Screen vs Normal Touch Screen\n          </div>\n          <div className=\"body-1\">\n            Many systems detect changes along an axis or in a specific direction\n            instead of at each point on the screen. Some systems take\n            measurements by first establishing a baseline. Unlike Apple\n            touchscreen many of the elements of its multi-touch user interface\n            require you to touch multiple points on the screen simultaneously.\n            For example, you can zoom in to Web pages or pictures by placing\n            your thumb and finger on the screen and spreading them apart.\n          </div>\n          <hr className=\"line\" />\n          <div className=\"heading-2\">Benefits?</div>\n          <div className=\"body-1\">\n            <ol style={{ margin: 0 }}>\n              <li>\n                It requires less pressure rather than resistive touchscreen.\n              </li>\n              <li>It supports multi-touch.</li>\n              <li>It offers high clarity and resolution.</li>\n            </ol>\n          </div>\n          <hr className=\"line\" />\n          <div className=\"heading-2\">Team members</div>\n          <div className=\"body-1\">\n            <ol style={{ margin: 0 }}>\n              <li>Warakorn Chantranupong 61130500226</li>\n              <li>Anawat Paothong 61130500231</li>\n              <li>Noppanut Boonrueng 61130500241</li>\n            </ol>\n          </div>\n          <hr className=\"line\" />\n          <div className=\"heading-3\">\n            Ref:\n            <ol style={{ margin: 0 }}>\n              <li>\n                <a href=\"https://www.rfwireless-world.com/Terminology/Advantages-and-Disadvantages-of-Capacitive-Touch-Screen.html\">\n                  https://www.rfwireless-world.com/Terminology/Advantages-and-Disadvantages-of-Capacitive-Touch-Screen.html\n                </a>\n              </li>\n              <li>\n                <a href=\"https://en.wikipedia.org/wiki/Touchscreen\">\n                  https://en.wikipedia.org/wiki/Touchscreen\n                </a>\n              </li>\n              <li>\n                <a href=\"https://electronics.howstuffworks.com/iphone1.htm\">\n                  https://electronics.howstuffworks.com/iphone1.htm\n                </a>\n              </li>\n              <li>\n                <a href=\"http://www.en-touch.com/top-4-benefits-of-capacitive-touchscreen-technology/\">\n                  http://www.en-touch.com/top-4-benefits-of-capacitive-touchscreen-technology/\n                </a>\n              </li>\n              <li>\n                <a href=\"https://www.economist.com/technology-quarterly/2008/09/06/touching-the-future\">\n                  https://www.economist.com/technology-quarterly/2008/09/06/touching-the-future\n                </a>\n              </li>\n              <li>\n                <a href=\"https://scienceline.org/2012/01/okay-but-how-do-touch-screens-actually-work/\">\n                  https://scienceline.org/2012/01/okay-but-how-do-touch-screens-actually-work/\n                </a>\n              </li>\n            </ol>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}